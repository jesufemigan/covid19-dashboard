{"version":3,"sources":["api/index.js","features/covid/dataSlice.js","utils/index.js","components/BarChart.jsx","components/DoughnutChart.jsx","components/Card/Card.jsx","components/CardCollection.jsx","components/Spinner.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["API","axios","create","baseURL","getAllData","createAsyncThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_","thunkAPI","data","message","wrap","_context","prev","next","get","sent","abrupt","t0","response","toString","rejectWithValue","stop","_x","_x2","apply","this","arguments","dataSlice","createSlice","name","initialState","isFiltering","isLoading","isSuccess","isError","reducers","resetTodo","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","notEmptyObject","obj","keys","length","BarChart","useSelector","_useState","useState","labels","states","map","datasets","label","confirmedCases","backgroundColor","discharged","death","_useState2","slicedToArray","stateData","react_default","createElement","style","width","dist","DoughnutChart","totalActiveCases","totalConfirmedCases","Card","number","bgColor","textColor","icon","color","className","replace","CardCollection","size","totalSamplesTested","Fragment","components_Card_Card","parseInt","split","join","index_esm","gi_index_esm","md_index_esm","Spinner","loading","height","display","alignItems","justifyContent","ClipLoader_default","cssOverride","margin","borderColor","App","dispatch","useDispatch","useEffect","_useSelector","components_Spinner","padding","fontSize","components_CardCollection","components_BarChart","components_DoughnutChart","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dataReducer","ReactDOM","render","StrictMode","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.518487a5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst BASE_URL = 'https://covidnigeria.herokuapp.com/api'\r\n\r\nexport const API = axios.create({\r\n  baseURL: BASE_URL\r\n})\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../api\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  isFiltering: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  isError: false,\r\n  message: ''\r\n}\r\n\r\nexport const getAllData = createAsyncThunk('data/getAll', async(_, thunkAPI) => {\r\n  try {\r\n    const data = await API.get('/')\r\n    return data.data.data\r\n  } catch (error) {\r\n    const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n\r\n    return thunkAPI.rejectWithValue(message)\r\n  }\r\n})\r\n\r\n\r\nexport const dataSlice = createSlice({\r\n  name: 'data',\r\n  initialState,\r\n  reducers: {\r\n    resetTodo: (state) => {\r\n      state.isLoading = false\r\n      state.isSuccess = false\r\n      state.message = ''\r\n      state.isError = false\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getAllData.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getAllData.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.data = action.payload\r\n      })\r\n      .addCase(getAllData.rejected, (state, action) => {\r\n        state.isLoading= false\r\n        state.isError = true\r\n        state.message = action.payload\r\n      })\r\n      \r\n  }\r\n})\r\n\r\nexport const { resetTodo } = dataSlice.actions\r\nexport default dataSlice.reducer","export const notEmptyObject = (obj) => {\r\n  return Object.keys(obj).length !== 0\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\n\r\nimport { useState } from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { notEmptyObject } from '../utils'\r\n\r\nconst BarChart = () => {\r\n  const { data } = useSelector(state => state.data)\r\n  \r\n  const [stateData, setStateData] = useState({\r\n    labels: notEmptyObject(data) && data.states.map((state) => state.state),\r\n    datasets: [\r\n      {\r\n        label: \"Confirmed Cases\",\r\n        data: notEmptyObject(data) && data.states.map((state) => state.confirmedCases),\r\n        backgroundColor: [\"#5800FF\"]\r\n      },\r\n      {\r\n        label: \"Discharged\",\r\n        data: notEmptyObject(data) && data.states.map((state) => state.discharged),\r\n        backgroundColor: [\"#72FFFF\"]\r\n      },\r\n      {\r\n        label: \"Deaths\",\r\n        data:  notEmptyObject(data) && data.states.map((state => state.death)),\r\n        backgroundColor: [\"#0096FF\"]\r\n      }\r\n    ]\r\n  })\r\n  \r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Bar data={stateData} />\r\n    </div>\r\n  )\r\n}\r\nexport default BarChart","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { useState } from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { notEmptyObject } from '../utils'\r\n\r\nconst DoughnutChart = () => {\r\n  const { data } = useSelector(state => state.data)\r\n  \r\n  const [stateData, setStateData] = useState({\r\n    labels: [\r\n      \"ActiveCases\",\r\n      \"ConfirmedCases\",\r\n      \"Deaths\",\r\n      \"Discharged\"\r\n    ],\r\n    datasets: [{\r\n      data: notEmptyObject(data) && [data.totalActiveCases, data.totalConfirmedCases, data.death, data.discharged],\r\n      backgroundColor: [\r\n        \"#5800FF\",\r\n        \"#0096FF\",\r\n        \"#00D7FF\",\r\n        \"#72FFFF\"\r\n      ]\r\n    }]\r\n  })\r\n  return (\r\n    <Doughnut data={stateData}/>\r\n  )\r\n}\r\nexport default DoughnutChart","import React from 'react'\r\nimport './Card.css'\r\n\r\nimport { numberWithCommas } from '../../utils/'\r\n\r\nconst Card = ({ name, number, bgColor, textColor, icon }) => {\r\n  \r\n  return (\r\n    <div style={{backgroundColor: bgColor, color: textColor}} className=\"card\">\r\n      <p>{name}</p>\r\n      <span>\r\n        {icon}\r\n        <h1>{numberWithCommas(number)}</h1>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\nexport default Card","import React from \"react\"\r\nimport Card from \"./Card/Card\"\r\n\r\n\r\nimport { BiTestTube } from 'react-icons/bi'\r\nimport { GiConfirmed, GiTombstone, GiWalk } from 'react-icons/gi'\r\nimport { MdSick } from 'react-icons/md'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport {notEmptyObject} from '../utils'\r\n\r\nconst CardCollection = ({size}) => {\r\n  const { data } = useSelector(state => state.data)\r\n\r\n  const { totalSamplesTested, totalConfirmedCases, discharged, totalActiveCases, death } = data\r\n\r\n  return (\r\n    notEmptyObject(data) && <>\r\n      <Card name=\"Samples Tested\" number={parseInt(totalSamplesTested.split(',').join(''))} bgColor=\"rgb(194,204,226)\" textColor=\"black)\" icon={<BiTestTube size={size}/>}/>\r\n      <Card name=\"Confirmed Cases\" number={totalConfirmedCases} bgColor=\"rgb(244, 247, 253)\" textColor=\"rgb(40,93,200)\" icon={<GiConfirmed size={size}/>}/>\r\n      <Card name=\"Patients Discharge\" number={discharged} bgColor=\"rgb(242,250,255)\" textColor=\"rgb(13,147,247)\" icon={<GiWalk size={size}/>}/>\r\n      <Card name=\"Active Cases\" number={totalActiveCases} bgColor=\"rgb(255,247,243)\" textColor=\"rgb(245, 125,46)\" icon={<MdSick size={size}/>}/>\r\n      <Card name=\"Deaths\" number={death} bgColor=\"rgb(249,249,249)\" textColor=\"rgb(255,109,6)\" icon={<GiTombstone size={size}/>}/>\r\n    </>\r\n  )\r\n}\r\nexport default CardCollection","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst Spinner = () => {\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  \r\nconst override = {\r\n  display: \"block\",\r\n  margin: \"0 auto\",\r\n  borderColor: \"#00D7FF\",\r\n};\r\n  \r\n  return (\r\n    <div style={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <ClipLoader color={\"#00D7FF\"} loading={loading} cssOverride={override} size={150} />\r\n    </div>\r\n  )\r\n}\r\nexport default Spinner\r\n","import React from 'react'\nimport './App.css';\n\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { getAllData } from './features/covid/dataSlice'\n\nimport { useSelector } from 'react-redux'\nimport BarChart from './components/BarChart';\nimport DoughnutChart from './components/DoughnutChart';\nimport CardCollection from './components/CardCollection'\n\nimport Spinner from './components/Spinner';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllData())\n  }, [dispatch])\n  \n  const { isLoading, data } = useSelector(state => state.data)\n\n  if (isLoading) return <Spinner />  \n  return (\n    <div className=\"App\">\n      <h1 style={{ padding: '0 0 50px', fontSize: 24, color: 'rgb(44,49,60)',}}>Covid19 Helper Dashboard</h1>\n      <div className='first-section'>\n        <CardCollection size={25}/>\n      </div>\n      <div className=\"second-section\">\n        <div className=\"bar\">\n          <BarChart />\n        </div>\n        <div className=\"dough\">\n          <DoughnutChart />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport dataReducer from '../features/covid/dataSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    data: dataReducer\r\n  }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './app/store';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}